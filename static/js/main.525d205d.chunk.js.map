{"version":3,"sources":["Constants/index.js","Store/actions/index.js","Helpers/index.js","Components/Page/ActionButtons/index.js","Components/Page/Content/index.js","Components/Page/index.js","Components/Wrapper/index.js","Store/reducers/pages.js","Store/reducers/active.js","Store/reducers/index.js","App.js","index.js"],"names":["ACTIONS","INITIAL_PAGE_NAME","INITIAL_PAGE_EXPENDED","INITIAL_PAGE_PAGES","INITIAL_PAGE_BLOCKS","addPage","payload","type","setActivePage","getPathLength","action","path","position","length","getBottomLine","isLast","page","expanded","pages","className","isPageAction","leftElementCondition","current_path","index","rightElementCondition","singleElementCondition","middleElementCondition","ActionButtons","isActive","dispatch","useDispatch","onClick","e","stopPropagation","Content","handleBlockNameChange","value","target","handleBlockRemove","name","onChange","droppableId","provided","ref","innerRef","blocks","map","block","draggableId","snapshot","draggableProps","dragHandleProps","classnames","dragging","isDragging","placeholder","Page","activePage","useSelector","store","active","getPageContent","data","Wrapper","state","handleBodyClick","useEffect","document","addEventListener","removeEventListener","id","onDragEnd","destination","source","pagesReducer","path_","split","stateClone","stateLinked","i","unshift","push","splice","sourcePath","stateLinked_","activeReducer","createStore","combineReducers","window","__REDUX_DEVTOOLS_EXTENSION__","App","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.525d205d.chunk.js","sourcesContent":["export const ACTIONS = {\r\n  ADD_PAGE: \"ADD_PAGE\",\r\n  REMOVE_PAGE: \"REMOVE_PAGE\",\r\n  EXPEND_PAGE: \"EXPEND_PAGE\",\r\n  DRAG_AND_DROP: \"DRAG_AND_DROP\",\r\n  SET_ACTIVE_PAGE: \"SET_ACTIVE_PAGE\",\r\n  CHANGE_PAGE_NAME: \"CHANGE_PAGE_NAME\",\r\n  CHANGE_BLOCK_NAME: \"CHANGE_BLOCK_NAME\",\r\n  REMOVE_BLOCK: \"REMOVE_BLOCK\",\r\n  ADD_BLOCK: \"ADD_BLOCK\",\r\n};\r\n\r\nexport const INITIAL_PAGE_NAME = \"New Page\";\r\nexport const INITIAL_PAGE_EXPENDED = true;\r\nexport const INITIAL_PAGE_PAGES = [];\r\nexport const INITIAL_PAGE_BLOCKS = [\"New Block\"];\r\n","import { ACTIONS } from \"./../../Constants\";\r\n\r\nexport const addPage = (payload) => {\r\n  return {\r\n    type: ACTIONS.ADD_PAGE,\r\n    payload,\r\n  };\r\n};\r\n\r\nexport const removePage = (payload) => {\r\n  return {\r\n    type: ACTIONS.REMOVE_PAGE,\r\n    payload,\r\n  };\r\n};\r\n\r\nexport const expendPage = (payload) => {\r\n  return {\r\n    type: ACTIONS.EXPEND_PAGE,\r\n    payload,\r\n  };\r\n};\r\n\r\nexport const setActivePage = (payload) => {\r\n  return {\r\n    type: ACTIONS.SET_ACTIVE_PAGE,\r\n    payload,\r\n  };\r\n};\r\n\r\nexport const dragAndDrop = (payload) => {\r\n  return {\r\n    type: ACTIONS.DRAG_AND_DROP,\r\n    payload,\r\n  };\r\n};\r\n\r\nexport const changePageName = (payload) => {\r\n  return {\r\n    type: ACTIONS.CHANGE_PAGE_NAME,\r\n    payload,\r\n  };\r\n};\r\n\r\nexport const addBlock = (payload) => {\r\n  return {\r\n    type: ACTIONS.ADD_BLOCK,\r\n    payload,\r\n  };\r\n};\r\n\r\nexport const changeBlockName = (payload) => {\r\n  return {\r\n    type: ACTIONS.CHANGE_BLOCK_NAME,\r\n    payload,\r\n  };\r\n};\r\n\r\nexport const removeBlock = (payload) => {\r\n  return {\r\n    type: ACTIONS.REMOVE_BLOCK,\r\n    payload,\r\n  };\r\n};\r\n","import { ACTIONS } from \"./../Constants\";\r\n\r\nexport const getPathLength = (action, path) => {\r\n  if (\r\n    (action.type === ACTIONS.ADD_PAGE &&\r\n      (action.payload.position === \"left\" ||\r\n        action.payload.position === \"right\")) ||\r\n    action.type === ACTIONS.REMOVE_PAGE\r\n  )\r\n    return path.length - 1;\r\n  else return path.length;\r\n};\r\n\r\nexport const getBottomLine = (isLast, page) => {\r\n  if (!isLast && page.expanded) {\r\n    if (page.pages.length <= 1) return <div className=\"bottom-line\"></div>;\r\n    else\r\n      return (\r\n        <div className=\"bottom-line-curved\">\r\n          <div className=\"left\"></div>\r\n          <div className=\"right\"></div>\r\n        </div>\r\n      );\r\n  }\r\n\r\n  return null;\r\n};\r\n\r\nexport const isPageAction = (type) => {\r\n  if (\r\n    type === ACTIONS.ADD_PAGE ||\r\n    type === ACTIONS.REMOVE_PAGE ||\r\n    type === ACTIONS.EXPEND_PAGE ||\r\n    type === ACTIONS.DRAG_AND_DROP ||\r\n    type === ACTIONS.CHANGE_PAGE_NAME ||\r\n    type === ACTIONS.CHANGE_BLOCK_NAME ||\r\n    type === ACTIONS.REMOVE_BLOCK ||\r\n    type === ACTIONS.ADD_BLOCK\r\n  )\r\n    return true;\r\n  else return false;\r\n};\r\n\r\nexport const leftElementCondition = (pages, current_path, index) =>\r\n  index === 0 && pages.length > 1 && current_path !== \"0\";\r\n\r\nexport const rightElementCondition = (pages, current_path, index) =>\r\n  index === pages.length - 1 && index !== 0 && current_path !== \"0\";\r\n\r\nexport const singleElementCondition = (pages, current_path) =>\r\n  pages.length === 1 && current_path !== \"0\";\r\n\r\nexport const middleElementCondition = (pages, current_path, index) =>\r\n  index !== 0 && index < pages.length - 1 && current_path !== \"0\";\r\n","import React from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport {\r\n  leftElementCondition,\r\n  rightElementCondition,\r\n  singleElementCondition,\r\n  middleElementCondition,\r\n  getBottomLine,\r\n} from \"./../../../Helpers\";\r\nimport {\r\n  addPage,\r\n  expendPage,\r\n  setActivePage,\r\n  removePage,\r\n} from \"../../../Store/actions\";\r\n\r\nconst ActionButtons = ({\r\n  page,\r\n  pages,\r\n  current_path,\r\n  index,\r\n  isActive,\r\n  isLast,\r\n}) => {\r\n  const dispatch = useDispatch();\r\n\r\n  return (\r\n    <>\r\n      {leftElementCondition(pages, current_path, index) && (\r\n        <>\r\n          <div className=\"left-line\"></div>\r\n          <div\r\n            className=\"action-btn add-page-from-left\"\r\n            onClick={(e) => {\r\n              e.stopPropagation();\r\n              dispatch(setActivePage({ current_path: null }));\r\n              dispatch(\r\n                addPage({\r\n                  position: \"left\",\r\n                  current_path,\r\n                })\r\n              );\r\n            }}\r\n          >\r\n            +\r\n          </div>\r\n        </>\r\n      )}\r\n      {rightElementCondition(pages, current_path, index) && (\r\n        <>\r\n          <div className=\"right-line\"></div>\r\n          <div\r\n            className=\"action-btn add-page-from-right\"\r\n            onClick={(e) => {\r\n              e.stopPropagation();\r\n              dispatch(setActivePage({ current_path: null }));\r\n              dispatch(\r\n                addPage({\r\n                  position: \"right\",\r\n                  current_path,\r\n                })\r\n              );\r\n            }}\r\n          >\r\n            +\r\n          </div>\r\n        </>\r\n      )}\r\n      {singleElementCondition(pages, current_path) && (\r\n        <div\r\n          className=\"action-btn add-page-from-left\"\r\n          onClick={(e) => {\r\n            e.stopPropagation();\r\n            dispatch(setActivePage({ current_path: null }));\r\n            dispatch(\r\n              addPage({\r\n                position: \"left\",\r\n                current_path,\r\n              })\r\n            );\r\n          }}\r\n        >\r\n          +\r\n        </div>\r\n      )}\r\n      {isLast ? (\r\n        <div\r\n          className=\"action-btn add-page-child\"\r\n          onClick={(e) => {\r\n            e.stopPropagation();\r\n            dispatch(\r\n              addPage({\r\n                position: \"child\",\r\n                current_path,\r\n              })\r\n            );\r\n          }}\r\n        >\r\n          +\r\n        </div>\r\n      ) : (\r\n        <div\r\n          className=\"action-btn expand\"\r\n          onClick={(e) => {\r\n            e.stopPropagation();\r\n            dispatch(expendPage({ current_path }));\r\n          }}\r\n        ></div>\r\n      )}\r\n      {(middleElementCondition(pages, current_path, index) ||\r\n        singleElementCondition(pages, current_path)) && (\r\n        <div className=\"middle-line\"></div>\r\n      )}\r\n      {getBottomLine(isLast, page)}\r\n      {isActive && (\r\n        <div\r\n          className=\"action-btn remove-page\"\r\n          onClick={(e) => {\r\n            e.stopPropagation();\r\n            dispatch(setActivePage({ current_path: null }));\r\n            dispatch(removePage({ current_path, index }));\r\n          }}\r\n        >\r\n          +\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ActionButtons;\r\n","import React from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport {\r\n  changePageName,\r\n  changeBlockName,\r\n  removeBlock,\r\n  addBlock,\r\n} from \"./../../../Store/actions\";\r\nimport { Droppable, Draggable } from \"react-beautiful-dnd\";\r\nimport classnames from \"classnames\";\r\n\r\nconst Content = ({ page, current_path, isActive }) => {\r\n  const dispatch = useDispatch();\r\n\r\n  const handleNameChange = (e) => {\r\n    dispatch(changePageName({ current_path, value: e.target.value }));\r\n  };\r\n\r\n  const handleBlockNameChange = (e, index) => {\r\n    dispatch(changeBlockName({ current_path, value: e.target.value, index }));\r\n  };\r\n\r\n  const handleBlockRemove = (index) => {\r\n    dispatch(removeBlock({ current_path, index }));\r\n  };\r\n\r\n  const handleAddBlock = () => {\r\n    dispatch(addBlock({ current_path }));\r\n  };\r\n\r\n  return (\r\n    <div className=\"content\">\r\n      <div className=\"page-title\">\r\n        <input type=\"text\" value={page.name} onChange={handleNameChange} />\r\n      </div>\r\n      <Droppable droppableId={current_path}>\r\n        {(provided) => (\r\n          <div ref={provided.innerRef}>\r\n            {page.blocks.map((block, index) => {\r\n              return (\r\n                <Draggable\r\n                  key={index}\r\n                  draggableId={current_path + \"_\" + index}\r\n                  index={index}\r\n                >\r\n                  {(provided, snapshot) => (\r\n                    <div\r\n                      ref={provided.innerRef}\r\n                      {...provided.draggableProps}\r\n                      {...provided.dragHandleProps}\r\n                    >\r\n                      <div\r\n                        className={classnames(\"block-name-container\", {\r\n                          dragging: snapshot.isDragging,\r\n                        })}\r\n                      >\r\n                        {isActive ? (\r\n                          <>\r\n                            <input\r\n                              type=\"text\"\r\n                              value={block}\r\n                              onChange={(e) => handleBlockNameChange(e, index)}\r\n                            />\r\n                            <div\r\n                              className=\"action-btn remove-block\"\r\n                              onClick={() => handleBlockRemove(index)}\r\n                            >\r\n                              +\r\n                            </div>\r\n                          </>\r\n                        ) : (\r\n                          <div className=\"block-name\">{block}</div>\r\n                        )}\r\n                      </div>\r\n                    </div>\r\n                  )}\r\n                </Draggable>\r\n              );\r\n            })}\r\n            {provided.placeholder}\r\n          </div>\r\n        )}\r\n      </Droppable>\r\n      {isActive && (\r\n        <div className=\"action-btn add-block\" onClick={handleAddBlock}>\r\n          +\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Content;\r\n","import React from \"react\";\r\nimport classnames from \"classnames\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { setActivePage } from \"../../Store/actions\";\r\nimport {\r\n  leftElementCondition,\r\n  rightElementCondition,\r\n  singleElementCondition,\r\n  middleElementCondition,\r\n} from \"./../../Helpers\";\r\nimport ActionButtons from \"./ActionButtons\";\r\nimport Content from \"./Content\";\r\n\r\nconst Page = ({ pages, path }) => {\r\n  const dispatch = useDispatch();\r\n  const activePage = useSelector((store) => store.active);\r\n\r\n  const getPageContent = (index, page, current_path, isLast) => {\r\n    const isActive = activePage && activePage === current_path;\r\n    return (\r\n      <div\r\n        className={classnames(\"row\", {\r\n          \"middle-element\": middleElementCondition(pages, current_path, index),\r\n          \"single-element\": singleElementCondition(pages, current_path),\r\n          \"single-middle-element\":\r\n            middleElementCondition(pages, current_path, index) &&\r\n            pages.length === 3,\r\n          \"left-element\": leftElementCondition(pages, current_path, index),\r\n          \"right-element\": rightElementCondition(pages, current_path, index),\r\n        })}\r\n      >\r\n        <div\r\n          className={classnames(\"page\", { active: isActive })}\r\n          onClick={(e) => {\r\n            e.stopPropagation();\r\n            dispatch(setActivePage({ current_path }));\r\n          }}\r\n        >\r\n          <ActionButtons\r\n            page={page}\r\n            pages={pages}\r\n            current_path={current_path}\r\n            index={index}\r\n            isActive={isActive}\r\n            isLast={isLast}\r\n          />\r\n          <Content\r\n            page={page}\r\n            current_path={current_path}\r\n            isActive={isActive}\r\n          />\r\n          {!page.expanded && (\r\n            <div className=\"expended-borders\">\r\n              <div className=\"expended-border\"></div>\r\n              <div className=\"expended-border\"></div>\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {pages.map((page, index) => {\r\n        const current_path = path === \"start\" ? \"0\" : path + \".\" + index;\r\n        return (\r\n          <div className=\"column\" data={current_path} key={current_path}>\r\n            {page.pages.length === 0 ? (\r\n              getPageContent(index, page, current_path, true)\r\n            ) : (\r\n              <>\r\n                {getPageContent(index, page, current_path, false)}\r\n                {page.expanded && (\r\n                  <div className=\"row\">\r\n                    <Page pages={page.pages} path={current_path} />\r\n                  </div>\r\n                )}\r\n              </>\r\n            )}\r\n          </div>\r\n        );\r\n      })}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Page;\r\n","import React, { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { setActivePage, dragAndDrop } from \"./../../Store/actions\";\r\nimport { DragDropContext } from \"react-beautiful-dnd\";\r\nimport Page from \"../Page\";\r\nimport \"./styles.scss\";\r\n\r\nconst Wrapper = () => {\r\n  const pages = useSelector((state) => state.page);\r\n  const dispatch = useDispatch();\r\n\r\n  const handleBodyClick = () => dispatch(setActivePage({ current_path: null }));\r\n  useEffect(() => {\r\n    document.addEventListener(\"click\", handleBodyClick);\r\n    return () => {\r\n      document.removeEventListener(\"click\", handleBodyClick);\r\n    };\r\n  });\r\n\r\n  const onDragEnd = ({ destination, source }) => {\r\n    if (destination !== null)\r\n      dispatch(\r\n        dragAndDrop({\r\n          current_path: destination.droppableId,\r\n          destination,\r\n          source,\r\n        })\r\n      );\r\n  };\r\n\r\n  return (\r\n    <div id=\"wrapper\">\r\n      <DragDropContext onDragEnd={onDragEnd}>\r\n        <Page pages={pages} path=\"start\" />\r\n      </DragDropContext>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Wrapper;\r\n","import {\r\n  ACTIONS,\r\n  INITIAL_PAGE_NAME,\r\n  INITIAL_PAGE_EXPENDED,\r\n  INITIAL_PAGE_PAGES,\r\n  INITIAL_PAGE_BLOCKS,\r\n} from \"./../../Constants\";\r\nimport { getPathLength, isPageAction } from \"./../../Helpers\";\r\n\r\nconst pagesReducer = (\r\n  state = [\r\n    {\r\n      name: \"Main\",\r\n      expanded: true,\r\n      blocks: [],\r\n      pages: [\r\n        {\r\n          name: \"First\",\r\n          expanded: true,\r\n          blocks: [\"Block\"],\r\n          pages: [],\r\n        },\r\n        {\r\n          name: \"Second\",\r\n          expanded: true,\r\n          blocks: [],\r\n          pages: [\r\n            {\r\n              name: \"Page\",\r\n              expanded: true,\r\n              blocks: [\"Block\", \"Block\"],\r\n              pages: [\r\n                {\r\n                  name: \"Page\",\r\n                  expanded: true,\r\n                  blocks: [],\r\n                  pages: [],\r\n                },\r\n              ],\r\n            },\r\n          ],\r\n        },\r\n        {\r\n          name: \"Third\",\r\n          expanded: true,\r\n          blocks: [],\r\n          pages: [\r\n            {\r\n              name: \"Page\",\r\n              expanded: true,\r\n              blocks: [],\r\n              pages: [\r\n                {\r\n                  name: \"Page \",\r\n                  expanded: false,\r\n                  blocks: [],\r\n                  pages: [\r\n                    {\r\n                      name: \"Page\",\r\n                      expanded: true,\r\n                      blocks: [],\r\n                      pages: [],\r\n                    },\r\n                  ],\r\n                },\r\n              ],\r\n            },\r\n            {\r\n              name: \"Page\",\r\n              expanded: true,\r\n              blocks: [\"Block\", \"Block\", \"Block\"],\r\n              pages: [],\r\n            },\r\n          ],\r\n        },\r\n      ],\r\n    },\r\n  ],\r\n  action\r\n) => {\r\n  if (isPageAction(action.type)) {\r\n    const { current_path: path_ } = action.payload;\r\n    let path = [0];\r\n    if (path_ !== \"0\") path = path_.split(\".\");\r\n\r\n    let stateClone = [...state];\r\n    let stateLinked = stateClone;\r\n    for (let i = 0; i < getPathLength(action, path); i++) {\r\n      if (i === 0) stateLinked = stateLinked[path[i]];\r\n      else stateLinked = stateLinked.pages[path[i]];\r\n    }\r\n\r\n    switch (action.type) {\r\n      case ACTIONS.ADD_PAGE:\r\n        switch (action.payload.position) {\r\n          case \"left\":\r\n            stateLinked.pages.unshift({\r\n              name: INITIAL_PAGE_NAME,\r\n              expanded: INITIAL_PAGE_EXPENDED,\r\n              blocks: [...INITIAL_PAGE_BLOCKS],\r\n              pages: [...INITIAL_PAGE_PAGES],\r\n            });\r\n            break;\r\n          case \"right\":\r\n            stateLinked.pages.push({\r\n              name: INITIAL_PAGE_NAME,\r\n              expanded: INITIAL_PAGE_EXPENDED,\r\n              blocks: [...INITIAL_PAGE_BLOCKS],\r\n              pages: [...INITIAL_PAGE_PAGES],\r\n            });\r\n            break;\r\n          case \"child\":\r\n            stateLinked.pages.push({\r\n              name: INITIAL_PAGE_NAME,\r\n              expanded: INITIAL_PAGE_EXPENDED,\r\n              blocks: [...INITIAL_PAGE_BLOCKS],\r\n              pages: [...INITIAL_PAGE_PAGES],\r\n            });\r\n            break;\r\n          default:\r\n            return state;\r\n        }\r\n        return stateClone;\r\n      case ACTIONS.REMOVE_PAGE:\r\n        if (action.payload.path === \"0\") return [];\r\n        stateLinked.pages.splice(action.payload.index, 1);\r\n        return stateClone;\r\n      case ACTIONS.EXPEND_PAGE:\r\n        stateLinked.expanded = !stateLinked.expanded;\r\n        return stateClone;\r\n      case ACTIONS.DRAG_AND_DROP:\r\n        const { destination, source } = action.payload;\r\n\r\n        let sourcePath = [0];\r\n        if (source.droppableId !== \"0\")\r\n          sourcePath = source.droppableId.split(\".\");\r\n\r\n        let stateLinked_ = stateClone;\r\n        for (let i = 0; i < sourcePath.length; i++) {\r\n          if (i === 0) stateLinked_ = stateLinked_[sourcePath[i]];\r\n          else stateLinked_ = stateLinked_.pages[sourcePath[i]];\r\n        }\r\n        const blocks = stateLinked_.blocks[source.index];\r\n        stateLinked_.blocks.splice(source.index, 1);\r\n        stateLinked.blocks.splice(destination.index, 0, blocks);\r\n        return stateClone;\r\n      case ACTIONS.CHANGE_PAGE_NAME:\r\n        stateLinked.name = action.payload.value;\r\n        return stateClone;\r\n      case ACTIONS.CHANGE_BLOCK_NAME:\r\n        stateLinked.blocks[action.payload.index] = action.payload.value;\r\n        return stateClone;\r\n      case ACTIONS.REMOVE_BLOCK:\r\n        stateLinked.blocks.splice(action.payload.index, 1);\r\n        return stateClone;\r\n      case ACTIONS.ADD_BLOCK:\r\n        stateLinked.blocks.push(\"New Block\");\r\n        return stateClone;\r\n      default:\r\n        return state;\r\n    }\r\n  }\r\n  return state;\r\n};\r\nexport default pagesReducer;\r\n","import { ACTIONS } from \"./../../Constants\";\r\n\r\nconst activeReducer = (state = null, action) => {\r\n  switch (action.type) {\r\n    case ACTIONS.SET_ACTIVE_PAGE:\r\n      return action.payload.current_path;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default activeReducer;\r\n","import { createStore, combineReducers } from \"redux\";\r\nimport pagesReducer from \"./pages\";\r\nimport activeReducer from \"./active\";\r\n\r\nconst store = createStore(\r\n  combineReducers({ page: pagesReducer, active: activeReducer }),\r\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n);\r\nexport default store;\r\n","import Wrapper from \"./Components/Wrapper\";\nimport \"./App.scss\";\nimport { Provider } from \"react-redux\";\nimport store from \"./Store/reducers\";\n\nfunction App() {\n  return (\n    <Provider store={store}>\n      <Wrapper />\n    </Provider>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}